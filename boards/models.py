import os
import uuid
from django.db import models


class Entry(models.Model):
    entry_id = models.BigAutoField(primary_key=True)
    creation_datetime = models.DateTimeField(auto_now_add=True)

    # User input
    email = models.EmailField(null=True, blank=True)
    topic = models.CharField(max_length=100, null=True, blank=True)
    text = models.TextField(max_length=6000)
    file = models.FileField(upload_to='uploads/%Y/%m/%d/', null=True, blank=True)
    hide_file = models.BooleanField(default=False)
    embed = models.URLField(null=True, blank=True)

    # To remove thread, use autogenerated password
    password = models.UUIDField(default=uuid.uuid4, editable=True)

    def __str__(self):
        return str(self.entry_id)

    def file_extension(self):
        name, extension = os.path.splitext(self.file.name)
        if extension in [".jpg", ".gif", ".png"]:
            return "img"
        elif extension in [".webm", ".mp4"]:
            return "video"
        else:
            return "other"

    class Meta:
        verbose_name = "Entry"
        verbose_name_plural = "Entries"


class ThreadEntry(Entry):
    def __str__(self):
        return f"Thread #{self.entry_id}: {self.topic}"

    class Meta:
        verbose_name = "Thread"
        verbose_name_plural = "Threads"


class PostEntry(Entry):
    thread = models.ForeignKey(ThreadEntry, on_delete=models.CASCADE)
    is_op = models.BooleanField(default=False, blank=True)

    def __str__(self):
        return f"Post #{self.entry_id} to Thread #{self.thread.entry_id} - {self.topic}"

    class Meta:
        verbose_name = "Post"
        verbose_name_plural = "Posts"
